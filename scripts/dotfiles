#!/usr/bin/env bash

set -e

./scripts/banner "Processing dotfiles"

current_script="${BASH_SOURCE}[0]"
current_dir=$(dirname "$current_script")
root_dir=$(dirname "$current_dir")
stow_dir="$root_dir/stow"
packages=($( ls -A  -1 $stow_dir))

overwrite_all=false

files=($(find -L stow -type f ))
for file in "${files[@]}"
do
  target="$HOME/$(sed 's/stow\/.*\///g' <<< "$file")"

  if [ -L "$target" ] || [ -f "$target" ]; then
    if ! $overwrite_all; then
      echo "File already exists: $target, what do you want to do? [e]xit, [o]verwrite, [O]verwrite all"
      read -r response
      case "$response" in
        O) overwrite_all=true ;;
        e) exit 1 ;;
      esac
    fi

    if [ -L "$target" ]; then
      echo "removing symlink $target"
      rm -v "$target"
    fi

    if [ -f "$target" ]; then
      echo "backing up $target"
      mv -v "$target" "$target.backup"
    fi
  fi
done

overwrite_all=false

folders=($(find -L stow -type d ))
for folder in "${folders[@]}"
do
  target="$HOME/$(sed 's/stow\/.*\///g' <<< "$folder")"

  if [ -L "$target" ] || [ -f "$target" ]; then
    if ! $overwrite_all; then
      echo "File already exists: $target, what do you want to do? [e]xit, [o]verwrite, [O]verwrite all"
      read -r response
      case "$response" in
        O) overwrite_all=true ;;
        e) exit 1 ;;
      esac
    fi

    if [ -L "$target" ]; then
      echo "removing symlink $target"
      rm -rfv "$target"
    fi
  fi
done

for package in "${packages[@]}"
do
  echo "stowing $package"
  stow -R -v --no-folding --adopt -d "$stow_dir" -t "$HOME" -S "$package"
done

git checkout $stow_dir

ln -vnsf "$HOME/.profile" "$HOME/.zprofile"

source "$HOME/.profile"
