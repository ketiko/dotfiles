set nocompatible " vim > vi mode.
set shell=bash\ --login
set runtimepath+=$HOME/.vim
set viminfo+=n$HOME/.viminfo
set tags=./tags,~/tags

call pathogen#infect()
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

filetype plugin indent on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BASIC EDITING CONFIGURATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" allow unsaved background buffers and remember marks/undo for them
set hidden
" remember more commands and search history
set history=10000
set tabstop=2           " Use 2 spaces for <tab>
set shiftwidth=2        " Indent level is 2 spaces wide
set softtabstop=2       " <BS> over an autoindent deletes shiftwidth worth of spaces
set smarttab            " Insert blanks properly at beginning of a line
set autoindent          " Copy indent from current line when starting a new line
set expandtab           " Use spaces not tabs
set listchars=tab:>.,trail:.,extends:#,nbsp:.
set list
set smartindent
set laststatus=2        " Always show the status line
set showmatch           " Show matched paren when balanced
set incsearch           " Show best match while typing a search
set hlsearch            " Highlight searches and search results
set gdefault            " Default to /g global replace
" make searches case-sensitive only if they contain upper-case characters
set ignorecase smartcase
" highlight current line
set cursorline
" set cmdheight=2         " Cmd bar 2 rows high
set switchbuf=useopen
set numberwidth=5
set showtabline=2
" Prevent Vim from clobbering the scrollback buffer. See
" http://www.shallowsky.com/linux/noaltscreen.html
set t_ti= t_te=
set scrolloff=5         " Keep 5 lines (top/bottom) for scope
" Store temporary files in a central spot
"set backup
"set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
"set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backspace=2         " makes backspace work normally
" display incomplete commands
set showcmd             " Show partial command in the last line of the screen
" Enable highlighting for syntax
syntax on
" Enable file type detection.
" Use the default filetype settings, so that mail gets 'tw' set to 72,
" 'cindent' is on in C files, etc.
" Also load indent files, to automatically do language-dependent indenting.
filetype plugin indent on
" First list the available options and complete the longest common part, then have further <Tab>s cycle through the possibilities:
set wildmode=longest:list,full
" make tab completion for files/buffers act like bash
set wildmenu            " Menu completion in command mode on <Tab>
set wildignore+=*/tmp/*,*/.git/*,*.so,*.swp,*.zip,*/log/*
" change <leader> from \ to ,
let mapleader = ","
set nostartofline       " Avoid moving cursor to BOL when moving
set matchtime=2         " for .2 seconds
set linebreak           " Don't wrap text in the middle of a word
"set mouse+=a             " Always enable mouse
set clipboard+=unnamed  " Makes using clipboard easier
set ai                  " Auto indent
set si                  " Smart indent
" Stay in visual mode after >>
vnoremap << <gv
vnoremap >> >gv
nmap ,gf magg<S-v>G=`a
" clear highlighted search using the space bar
nnoremap <Space> :nohlsearch<CR>
set number              " Show line numbers
set numberwidth=1       " Try to use only 1 col when possible
"set textwidth=110       " Sets the max width text can be before vim inserts a linebreak
" Highlights text after going over the max text width
" set nowrap  " Line wrapping off
set wrap
set guioptions+=c       " Use console dialogs instead of popup dialogs for simple choices
set guioptions-=T       " Remove toolbar
set guioptions-=r       " Remove right-hand scroll bar
set guioptions-=m       " Removes the menu
set vb t_vb=            " No bells. Period.
set novisualbell        " No blinking
set noerrorbells        " No noise
set report=0            " : commands always print changed line count
set shortmess+=a        " Use [+]/[RO]/[w] for modified/readonly/written
set ruler               " Display position in the file

let g:solarized_termcolors=256
colorscheme solarized
set t_Co=256
set background=dark

set viminfo='10000,<5000,s1000,h

" Set vim working dir to the files current directory
autocmd BufEnter * silent! lcd %:p:h
autocmd BufRead *.rst silent! set textwidth=80

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
        \| exe "normal g'\"" | endif
endif

hi LineTooLong ctermbg=DarkBlue ctermfg=white
highlight OverLength ctermbg=DarkBlue ctermfg=white
match OverLength /\%81v.\+/

autocmd BufRead hg-editor-* setl tw=80
autocmd BufRead *.ru setl ft=ruby
autocmd BufRead,BufNewFile *.fsh,*.vsh,*.glsl setl glsl
autocmd BufRead,BufNewFile *.fsh,*.vsh,*.glsl setl nospell

set omnifunc=rubycomplete#Complete
let g:rubycomplete_buffer_loading = 1
let g:rubycomplete_classes_in_global = 1
autocmd FileType ruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby let g:rubycomplete_buffer_loading=1
autocmd FileType ruby let g:rubycomplete_classes_in_global=1
autocmd FileType ruby let g:rubycomplete_rails = 1

set spell spelllang=en_us
highlight clear SpellBad
highlight SpellBad term=standout ctermfg=1 term=underline cterm=underline
highlight clear SpellCap
highlight SpellCap term=underline cterm=underline
highlight clear SpellRare
highlight SpellRare term=underline cterm=underline
highlight clear SpellLocal
highlight SpellLocal term=underline cterm=underline

set undofile
set undodir=~/.vimundo
set undolevels=1000
set undoreload=10000
set nobackup
set nowritebackup

"let g:syntastic_auto_loc_list=1
"let g:easytags_auto_highlight = 1
"let g:easytags_auto_update = 1
"let g:easytags_dynamic_files = 1
"let g:easytags_python_enabled = 1

"
" Per-Filetype Scripts
"
filetype on             " File type detection on
filetype indent on      " Use filetype-specific indenting when available
filetype plugin on      " Load filetype plugins
set ofu=syntaxcomplete#Complete
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd FileType sql set omnifunc=sqlcomplete#CompleteSQL
autocmd BufRead *.spark set filetype=html

"
" Key Mappings
"
let c='a'
while c <= 'z'
  exec "set <A-".c.">=\e".c
  exec "imap \e".c." <A-".c.">"
  let c = nr2char(1+char2nr(c))
endw

set timeout ttimeoutlen=50

" clear highlighted search using the space bar
nnoremap <Space> :nohlsearch<CR>

" Stay in visual mode after >>
vnoremap << <gv
vnoremap >> >gv
nmap ,gf magg<S-v>G=`a

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <m-k> <C-w>+
map <m-j> <C-w>-
map <m-l> <C-w>>
map <m-h> <C-w><

map <F7> :setlocal spell! spell?<CR>

" NERD Tree Settings
map <F4> :NERDTreeFind<CR>
map <F3> :NERDTreeToggle %:p:h<CR>

" CTRLP Settings
let g:ctrlp_match_window_reversed = 0

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :edit $MYVIMRC<CR>
nmap <silent> <leader>sv :source $MYVIMRC<CR>

autocmd BufRead * normal zR
autocmd BufRead *.hamlc set ft=haml
